@using System.Linq;
@using Todo.WebApp.Controllers;
@using static Todo.WebApp.Controllers.ControllerExtensions;
@using static Todo.WebApp.MvcModels.ValidationConstants;
@using static Todo.WebApp.Views.ViewDataNames;
@model Todo.WebApp.SharedModels.TodoList;

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    void ListItemHtml(string value="", string indexName="")
    {
        <li class="itemContainer list-group-item d-flex align-items-end">
            <input class="itemIdx" type="hidden" name="items.Index" value="@indexName" />
            <input
                class="itemDesc form-control"
                name="items[@indexName].description"
                type="text"
                value="@value"
                required
                minlength="@MinStrLen"
                maxlength="@MaxStrLen"
            >
            <button class="addItemButton btn btn-secondary ms-1" type="button">+</button>
            <button class="removeItemButton btn btn-secondary ms-1" type="button">-</button>
        </li>
    }
}

@section pageHead {
<meta name="startIndex" content="@(Model?.Items?.Count ?? 1)">
<script src="/js/todolist-form.js"></script>
<template id="todo-item-template">
    @{ ListItemHtml(); }
</template>
}

@section pageNav {
    @if (null != Model) {
        <a class="nav-link" href="
            @Url.Action(
                nameof(TodoListController.Get),
                RoutingName<TodoListController>(),
                new { listId = Model.Id }
            )
        ">
            View
        </a>
    }
}


<h1 class="mb-3">
    @if(null == Model) {
        @: Create new list
    }
    else {
        @: Edit list
    }
</h1>
<form id="todoList" method="POST" class="mb-3">
    <div>
        <label class="form-label" for="title">Title</label>
        <input
            class="form-control"
            type="text"
            name="title"
            required
            minlength="@MinStrLen"
            maxlength="@MaxStrLen"
            value="@Model?.Title"
        >
    </div>
    <label class="form-label">Items</label>
    <div class="mb-3">
        <ul class="list-group">
        @if (Model?.Items?.Any() ?? false)
        {
            foreach (var i in Model.Items.Select((item, idx) => (item, idx)))
            {
                ListItemHtml(i.item, "idx" + i.idx);
            }
        }
        else
        {
            ListItemHtml(indexName: "idx0");
        }
        </ul>
    </div>
    <input class="btn btn-primary" type="submit" value="@ViewData[SubmitOperationName]">
</form>
