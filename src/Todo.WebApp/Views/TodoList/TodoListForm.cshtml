@using System.Linq;
@using Todo.WebApp.Controllers;
@using static Todo.WebApp.Controllers.ControllerExtensions;
@using static Todo.WebApp.Views.ViewDataNames;
@model Todo.WebApp.SharedModels.TodoList;

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    void ListItemHtml(string value="", string indexName="")
    {
        <div class="itemContainer">
            <input class="itemIdx" type="hidden" name="items.Index" value="@indexName" />
            <input class="itemDesc" name="items[@indexName].description" type="text" value="@value">
            <button class="addItemButton" type="button">+</button>
            <button class="removeItemButton" type="button">-</button>
        </div>
    }
}

@section pageHead {
<link rel="stylesheet" href="/css/todolist-form.css">
<meta name="startIndex" content="@(Model?.Items?.Count ?? 1)">
<script src="/js/todolist-form.js"></script>
<template id="todo-item-template">
    @{ ListItemHtml(); }
</template>
}

@section pageNav {
    @if (null != Model) {
        <a class="nav-link" href="
            @Url.Action(
                nameof(TodoListController.Get),
                RoutingName<TodoListController>(),
                new { listId = Model.Id }
            )
        ">
            View
        </a>
    }
}


<form id="todoList" method="POST">
    <label for="title">Title</label>
    <input name="title" type="text" value="@Model?.Title">
    <label>Items</label>
    @if (Model?.Items?.Any() ?? false)
    {
        foreach (var i in Model.Items.Select((item, idx) => (item, idx)))
        {
            ListItemHtml(i.item, "idx" + i.idx);
        }
    }
    else
    {
        ListItemHtml(indexName: "idx0");
    }
    <input type="submit" value="@ViewData[SubmitOperationName]">
</form>
